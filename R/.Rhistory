JoeJohnson_MP <- c(3340,2359,3343,3124,2886,2554,2127,2642,2575,2791)
LeBronJames_MP <- c(3361,3190,3027,3054,2966,3063,2326,2877,2902,2493)
CarmeloAnthony_MP <- c(2941,2486,2806,2277,2634,2751,1876,2482,2982,1428)
DwightHoward_MP <- c(3021,3023,3088,2821,2843,2935,2070,2722,2396,1223)
ChrisBosh_MP <- c(2751,2658,2425,2928,2526,2795,2007,2454,2531,1556)
ChrisPaul_MP <- c(2808,2353,3006,3002,1712,2880,2181,2335,2171,2857)
KevinDurant_MP <- c(1255,1255,2768,2885,3239,3038,2546,3119,3122,913)
DerrickRose_MP <- c(1168,1168,1168,3000,2871,3026,1375,0,311,1530)
DwayneWade_MP <- c(2892,1931,1954,3048,2792,2823,1625,2391,1775,1971)
#Matrix
MinutesPlayed <- rbind(KobeBryant_MP, JoeJohnson_MP, LeBronJames_MP, CarmeloAnthony_MP, DwightHoward_MP, ChrisBosh_MP, ChrisPaul_MP, KevinDurant_MP, DerrickRose_MP, DwayneWade_MP)
rm(KobeBryant_MP, JoeJohnson_MP, CarmeloAnthony_MP, DwightHoward_MP, ChrisBosh_MP, LeBronJames_MP, ChrisPaul_MP, DerrickRose_MP, DwayneWade_MP, KevinDurant_MP)
colnames(MinutesPlayed) <- Seasons
rownames(MinutesPlayed) <- Players
#Field Goals
KobeBryant_FG <- c(978,813,775,800,716,740,574,738,31,266)
JoeJohnson_FG <- c(632,536,647,620,635,514,423,445,462,446)
LeBronJames_FG <- c(875,772,794,789,768,758,621,765,767,624)
CarmeloAnthony_FG <- c(756,691,728,535,688,684,441,669,743,358)
DwightHoward_FG <- c(468,526,583,560,510,619,416,470,473,251)
ChrisBosh_FG <- c(549,543,507,615,600,524,393,485,492,343)
ChrisPaul_FG <- c(407,381,630,631,314,430,425,412,406,568)
KevinDurant_FG <- c(306,306,587,661,794,711,643,731,849,238)
DerrickRose_FG <- c(208,208,208,574,672,711,302,0,58,338)
DwayneWade_FG <- c(699,472,439,854,719,692,416,569,415,509)
#Matrix
FieldGoals <- rbind(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
rm(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
colnames(FieldGoals) <- Seasons
rownames(FieldGoals) <- Players
#Field Goal Attempts
KobeBryant_FGA <- c(2173,1757,1690,1712,1569,1639,1336,1595,73,713)
JoeJohnson_FGA <- c(1395,1139,1497,1420,1386,1161,931,1052,1018,1025)
LeBronJames_FGA <- c(1823,1621,1642,1613,1528,1485,1169,1354,1353,1279)
CarmeloAnthony_FGA <- c(1572,1453,1481,1207,1502,1503,1025,1489,1643,806)
DwightHoward_FGA <- c(881,873,974,979,834,1044,726,813,800,423)
ChrisBosh_FGA <- c(1087,1094,1027,1263,1158,1056,807,907,953,745)
ChrisPaul_FGA <- c(947,871,1291,1255,637,928,890,856,870,1170)
KevinDurant_FGA <- c(647,647,1366,1390,1668,1538,1297,1433,1688,467)
DerrickRose_FGA <- c(436,436,436,1208,1373,1597,695,0,164,835)
DwayneWade_FGA <- c(1413,962,937,1739,1511,1384,837,1093,761,1084)
#Matrix
FieldGoalAttempts <- rbind(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
rm(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
colnames(FieldGoalAttempts) <- Seasons
rownames(FieldGoalAttempts) <- Players
#Points
KobeBryant_PTS <- c(2832,2430,2323,2201,1970,2078,1616,2133,83,782)
JoeJohnson_PTS <- c(1653,1426,1779,1688,1619,1312,1129,1170,1245,1154)
LeBronJames_PTS <- c(2478,2132,2250,2304,2258,2111,1683,2036,2089,1743)
CarmeloAnthony_PTS <- c(2122,1881,1978,1504,1943,1970,1245,1920,2112,966)
DwightHoward_PTS <- c(1292,1443,1695,1624,1503,1784,1113,1296,1297,646)
ChrisBosh_PTS <- c(1572,1561,1496,1746,1678,1438,1025,1232,1281,928)
ChrisPaul_PTS <- c(1258,1104,1684,1781,841,1268,1189,1186,1185,1564)
KevinDurant_PTS <- c(903,903,1624,1871,2472,2161,1850,2280,2593,686)
DerrickRose_PTS <- c(597,597,597,1361,1619,2026,852,0,159,904)
DwayneWade_PTS <- c(2040,1397,1254,2386,2045,1941,1082,1463,1028,1331)
#Matrix
Points <- rbind(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
rm(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
colnames(Points) <- Seasons
rownames(Points) <- Players
FreeThrowAttempts
FreeThrows
matplot(t(Games))
matplot(t(Games), type='b')
matplot(t(Games), type="b", pch=15:18, col=c(1:4,6))
matplot(t(FieldGoals), type="b", pch=15:18, col=c(1:4,6))
myplot
Data <- MinutsPlayed[1:3,]
Data <- MinutesPlayed[1:3,]
matplot(t(FieldGoals), type="b", pch=15:18, col=c(1:4,6))
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft",inset=0.01, legend(Players), col=c(1:4,6), pch=15:18, horiz=F)
legend("bottomleft",inset=0.01, legend(Players), col=c(1:4,6), pch=15:18, horiz=F)
legend("bottomleft",inset=0.01, legend(Players), col=c(1:4,6), pch=15:18, horiz=F)
legend("bottomleft", inset=0.01, legend(Players), col=c(1:4,6), pch=15:18, horiz=F)
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4,6), pch=15:18, horiz=F)
myplot <- function(){
Data <- MinutesPlayed[1:3,]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset=0.01, legend=Players, col=c(1:4,6), pch=15:18, horiz=F)
}
Data <- MinutesPlayed[1:3,]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset=0.01, legend=Players[1:3], col=c(1:4,6), pch=15:18, horiz=F)
myplot <- function(data,rows=1:10){
Data <- data[rows,,drop=F]
matplot(t(Data), type="b", pch=15:18, col=c(1:4,6))
legend("bottomleft", inset=0.01, legend=Players[rows], col=c(1:4,6), pch=15:18, horiz=F)
}
myplot(Salary,1)
myplot(Salary)
myplot(Salary,1)
myplot(FreeThrowAttempts/Games)
myplot(FreeThrowAttempts/Games)
myplot(FreeThrowAttempts/Games)
myplot(FreeThrows/FreeThrowAttempts)
myplot((Points-FreeThrows)/FieldGoals)
myplot(FreeThrowAttempts/Games)
myplot(FreeThrowAttempts/Games)
myplot(FreeThrows/FreeThrowAttempts)
myplot((Points-FreeThrows)/FieldGoals)
#-----------------Visualizing what we need
qplot(data=stats, x=Internet.users, y=Birth.rate)
read.csv(file.choose())
stats <- read.csv(file.choose())
#-----------------Visualizing what we need
qplot(data=stats, x=Internet.users, y=Birth.rate)
#-----------------Visualizing what we need
qplot(data=stats, x=Internet.users, y=Birth.rate)
#install.packages("ggplot2")
library("ggplot2")
#-----------------Visualizing what we need
qplot(data=stats, x=Internet.users, y=Birth.rate)
qplot(data=stats, x=Internet.users, y=Birth.rate,
size=I(10))
qplot(data=stats, x=Internet.users, y=Birth.rate,
size=I(4))
qplot(data=stats, x=Internet.users, y=Birth.rate,
colour=I("red"), size=I(4))
qplot(data=stats, x=Internet.users, y=Birth.rate,
colour=I(Income.Group), size=I(5))
qplot(data=stats, x=Internet.users, y=Birth.rate,
colour=Income.Group, size=I(5))
qplot(data=stats, x=Internet.users)
qplot(data=stats, x=Income.Group, y=Birth.rate)
qplot(data=stats, x=Income.Group, y=Birth.rate, size=I(3))
qplot(data=stats, x=Income.Group, y=Birth.rate, size=I(3))
qplot(data=stats, x=Income.Group, y=Birth.rate, size=I(3),
color=I("blue"))
# both American and British English
# color() OR colour() works in R
qplot(data=stats, x=Income.Group, y=Birth.rate, geom="boxplot")
#-----------------Visualizing what we need
qplot(data=stats, x=Internet.users, y=Birth.rate)
qplot(data=stats, x=Internet.users, y=Birth.rate,
size=I(4))
qplot(data=stats, x=Internet.users, y=Birth.rate,
colour=I("red"), size=I(4))
qplot(data=stats, x=Internet.users, y=Birth.rate,
colour=Income.Group, size=I(5))
length(Countries_2012_Dataset)
#Execute below code to generate three new vectors
Countries_2012_Dataset <- c("Aruba","Afghanistan","Angola","Albania","United Arab Emirates","Argentina","Armenia","Antigua and Barbuda","Australia","Austria","Azerbaijan","Burundi","Belgium","Benin","Burkina Faso","Bangladesh","Bulgaria","Bahrain","Bahamas, The","Bosnia and Herzegovina","Belarus","Belize","Bermuda","Bolivia","Brazil","Barbados","Brunei Darussalam","Bhutan","Botswana","Central African Republic","Canada","Switzerland","Chile","China","Cote d'Ivoire","Cameroon","Congo, Rep.","Colombia","Comoros","Cabo Verde","Costa Rica","Cuba","Cayman Islands","Cyprus","Czech Republic","Germany","Djibouti","Denmark","Dominican Republic","Algeria","Ecuador","Egypt, Arab Rep.","Eritrea","Spain","Estonia","Ethiopia","Finland","Fiji","France","Micronesia, Fed. Sts.","Gabon","United Kingdom","Georgia","Ghana","Guinea","Gambia, The","Guinea-Bissau","Equatorial Guinea","Greece","Grenada","Greenland","Guatemala","Guam","Guyana","Hong Kong SAR, China","Honduras","Croatia","Haiti","Hungary","Indonesia","India","Ireland","Iran, Islamic Rep.","Iraq","Iceland","Israel","Italy","Jamaica","Jordan","Japan","Kazakhstan","Kenya","Kyrgyz Republic","Cambodia","Kiribati","Korea, Rep.","Kuwait","Lao PDR","Lebanon","Liberia","Libya","St. Lucia","Liechtenstein","Sri Lanka","Lesotho","Lithuania","Luxembourg","Latvia","Macao SAR, China","Morocco","Moldova","Madagascar","Maldives","Mexico","Macedonia, FYR","Mali","Malta","Myanmar","Montenegro","Mongolia","Mozambique","Mauritania","Mauritius","Malawi","Malaysia","Namibia","New Caledonia","Niger","Nigeria","Nicaragua","Netherlands","Norway","Nepal","New Zealand","Oman","Pakistan","Panama","Peru","Philippines","Papua New Guinea","Poland","Puerto Rico","Portugal","Paraguay","French Polynesia","Qatar","Romania","Russian Federation","Rwanda","Saudi Arabia","Sudan","Senegal","Singapore","Solomon Islands","Sierra Leone","El Salvador","Somalia","Serbia","South Sudan","Sao Tome and Principe","Suriname","Slovak Republic","Slovenia","Sweden","Swaziland","Seychelles","Syrian Arab Republic","Chad","Togo","Thailand","Tajikistan","Turkmenistan","Timor-Leste","Tonga","Trinidad and Tobago","Tunisia","Turkey","Tanzania","Uganda","Ukraine","Uruguay","United States","Uzbekistan","St. Vincent and the Grenadines","Venezuela, RB","Virgin Islands (U.S.)","Vietnam","Vanuatu","West Bank and Gaza","Samoa","Yemen, Rep.","South Africa","Congo, Dem. Rep.","Zambia","Zimbabwe")
length(Countries_2012_Dataset)
Codes_2012_Dataset <- c("ABW","AFG","AGO","ALB","ARE","ARG","ARM","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BFA","BGD","BGR","BHR","BHS","BIH","BLR","BLZ","BMU","BOL","BRA","BRB","BRN","BTN","BWA","CAF","CAN","CHE","CHL","CHN","CIV","CMR","COG","COL","COM","CPV","CRI","CUB","CYM","CYP","CZE","DEU","DJI","DNK","DOM","DZA","ECU","EGY","ERI","ESP","EST","ETH","FIN","FJI","FRA","FSM","GAB","GBR","GEO","GHA","GIN","GMB","GNB","GNQ","GRC","GRD","GRL","GTM","GUM","GUY","HKG","HND","HRV","HTI","HUN","IDN","IND","IRL","IRN","IRQ","ISL","ISR","ITA","JAM","JOR","JPN","KAZ","KEN","KGZ","KHM","KIR","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LIE","LKA","LSO","LTU","LUX","LVA","MAC","MAR","MDA","MDG","MDV","MEX","MKD","MLI","MLT","MMR","MNE","MNG","MOZ","MRT","MUS","MWI","MYS","NAM","NCL","NER","NGA","NIC","NLD","NOR","NPL","NZL","OMN","PAK","PAN","PER","PHL","PNG","POL","PRI","PRT","PRY","PYF","QAT","ROU","RUS","RWA","SAU","SDN","SEN","SGP","SLB","SLE","SLV","SOM","SRB","SSD","STP","SUR","SVK","SVN","SWE","SWZ","SYC","SYR","TCD","TGO","THA","TJK","TKM","TLS","TON","TTO","TUN","TUR","TZA","UGA","UKR","URY","USA","UZB","VCT","VEN","VIR","VNM","VUT","PSE","WSM","YEM","ZAF","COD","ZMB","ZWE")
Regions_2012_Dataset <- c("The Americas","Asia","Africa","Europe","Middle East","The Americas","Asia","The Americas","Oceania","Europe","Asia","Africa","Europe","Africa","Africa","Asia","Europe","Middle East","The Americas","Europe","Europe","The Americas","The Americas","The Americas","The Americas","The Americas","Asia","Asia","Africa","Africa","The Americas","Europe","The Americas","Asia","Africa","Africa","Africa","The Americas","Africa","Africa","The Americas","The Americas","The Americas","Europe","Europe","Europe","Africa","Europe","The Americas","Africa","The Americas","Africa","Africa","Europe","Europe","Africa","Europe","Oceania","Europe","Oceania","Africa","Europe","Asia","Africa","Africa","Africa","Africa","Africa","Europe","The Americas","The Americas","The Americas","Oceania","The Americas","Asia","The Americas","Europe","The Americas","Europe","Asia","Asia","Europe","Middle East","Middle East","Europe","Middle East","Europe","The Americas","Middle East","Asia","Asia","Africa","Asia","Asia","Oceania","Asia","Middle East","Asia","Middle East","Africa","Africa","The Americas","Europe","Asia","Africa","Europe","Europe","Europe","Asia","Africa","Europe","Africa","Asia","The Americas","Europe","Africa","Europe","Asia","Europe","Asia","Africa","Africa","Africa","Africa","Asia","Africa","Oceania","Africa","Africa","The Americas","Europe","Europe","Asia","Oceania","Middle East","Asia","The Americas","The Americas","Asia","Oceania","Europe","The Americas","Europe","The Americas","Oceania","Middle East","Europe","Europe","Africa","Middle East","Africa","Africa","Asia","Oceania","Africa","The Americas","Africa","Europe","Africa","Africa","The Americas","Europe","Europe","Europe","Africa","Africa","Middle East","Africa","Africa","Asia","Asia","Asia","Asia","Oceania","The Americas","Africa","Europe","Africa","Africa","Europe","The Americas","The Americas","Asia","The Americas","The Americas","The Americas","Asia","Oceania","Middle East","Oceania","Middle East","Africa","Africa","Africa","Africa")
length(Codes_2012_Dataset)
length(Regions_2012_Dataset)
#Execute below code to generate three new vectors
Countries_2012_Dataset <- c("Aruba","Afghanistan","Angola","Albania","United Arab Emirates","Argentina","Armenia","Antigua and Barbuda","Australia","Austria","Azerbaijan","Burundi","Belgium","Benin","Burkina Faso","Bangladesh","Bulgaria","Bahrain","Bahamas, The","Bosnia and Herzegovina","Belarus","Belize","Bermuda","Bolivia","Brazil","Barbados","Brunei Darussalam","Bhutan","Botswana","Central African Republic","Canada","Switzerland","Chile","China","Cote d'Ivoire","Cameroon","Congo, Rep.","Colombia","Comoros","Cabo Verde","Costa Rica","Cuba","Cayman Islands","Cyprus","Czech Republic","Germany","Djibouti","Denmark","Dominican Republic","Algeria","Ecuador","Egypt, Arab Rep.","Eritrea","Spain","Estonia","Ethiopia","Finland","Fiji","France","Micronesia, Fed. Sts.","Gabon","United Kingdom","Georgia","Ghana","Guinea","Gambia, The","Guinea-Bissau","Equatorial Guinea","Greece","Grenada","Greenland","Guatemala","Guam","Guyana","Hong Kong SAR, China","Honduras","Croatia","Haiti","Hungary","Indonesia","India","Ireland","Iran, Islamic Rep.","Iraq","Iceland","Israel","Italy","Jamaica","Jordan","Japan","Kazakhstan","Kenya","Kyrgyz Republic","Cambodia","Kiribati","Korea, Rep.","Kuwait","Lao PDR","Lebanon","Liberia","Libya","St. Lucia","Liechtenstein","Sri Lanka","Lesotho","Lithuania","Luxembourg","Latvia","Macao SAR, China","Morocco","Moldova","Madagascar","Maldives","Mexico","Macedonia, FYR","Mali","Malta","Myanmar","Montenegro","Mongolia","Mozambique","Mauritania","Mauritius","Malawi","Malaysia","Namibia","New Caledonia","Niger","Nigeria","Nicaragua","Netherlands","Norway","Nepal","New Zealand","Oman","Pakistan","Panama","Peru","Philippines","Papua New Guinea","Poland","Puerto Rico","Portugal","Paraguay","French Polynesia","Qatar","Romania","Russian Federation","Rwanda","Saudi Arabia","Sudan","Senegal","Singapore","Solomon Islands","Sierra Leone","El Salvador","Somalia","Serbia","South Sudan","Sao Tome and Principe","Suriname","Slovak Republic","Slovenia","Sweden","Swaziland","Seychelles","Syrian Arab Republic","Chad","Togo","Thailand","Tajikistan","Turkmenistan","Timor-Leste","Tonga","Trinidad and Tobago","Tunisia","Turkey","Tanzania","Uganda","Ukraine","Uruguay","United States","Uzbekistan","St. Vincent and the Grenadines","Venezuela, RB","Virgin Islands (U.S.)","Vietnam","Vanuatu","West Bank and Gaza","Samoa","Yemen, Rep.","South Africa","Congo, Dem. Rep.","Zambia","Zimbabwe")
Codes_2012_Dataset <- c("ABW","AFG","AGO","ALB","ARE","ARG","ARM","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BFA","BGD","BGR","BHR","BHS","BIH","BLR","BLZ","BMU","BOL","BRA","BRB","BRN","BTN","BWA","CAF","CAN","CHE","CHL","CHN","CIV","CMR","COG","COL","COM","CPV","CRI","CUB","CYM","CYP","CZE","DEU","DJI","DNK","DOM","DZA","ECU","EGY","ERI","ESP","EST","ETH","FIN","FJI","FRA","FSM","GAB","GBR","GEO","GHA","GIN","GMB","GNB","GNQ","GRC","GRD","GRL","GTM","GUM","GUY","HKG","HND","HRV","HTI","HUN","IDN","IND","IRL","IRN","IRQ","ISL","ISR","ITA","JAM","JOR","JPN","KAZ","KEN","KGZ","KHM","KIR","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LIE","LKA","LSO","LTU","LUX","LVA","MAC","MAR","MDA","MDG","MDV","MEX","MKD","MLI","MLT","MMR","MNE","MNG","MOZ","MRT","MUS","MWI","MYS","NAM","NCL","NER","NGA","NIC","NLD","NOR","NPL","NZL","OMN","PAK","PAN","PER","PHL","PNG","POL","PRI","PRT","PRY","PYF","QAT","ROU","RUS","RWA","SAU","SDN","SEN","SGP","SLB","SLE","SLV","SOM","SRB","SSD","STP","SUR","SVK","SVN","SWE","SWZ","SYC","SYR","TCD","TGO","THA","TJK","TKM","TLS","TON","TTO","TUN","TUR","TZA","UGA","UKR","URY","USA","UZB","VCT","VEN","VIR","VNM","VUT","PSE","WSM","YEM","ZAF","COD","ZMB","ZWE")
Regions_2012_Dataset <- c("The Americas","Asia","Africa","Europe","Middle East","The Americas","Asia","The Americas","Oceania","Europe","Asia","Africa","Europe","Africa","Africa","Asia","Europe","Middle East","The Americas","Europe","Europe","The Americas","The Americas","The Americas","The Americas","The Americas","Asia","Asia","Africa","Africa","The Americas","Europe","The Americas","Asia","Africa","Africa","Africa","The Americas","Africa","Africa","The Americas","The Americas","The Americas","Europe","Europe","Europe","Africa","Europe","The Americas","Africa","The Americas","Africa","Africa","Europe","Europe","Africa","Europe","Oceania","Europe","Oceania","Africa","Europe","Asia","Africa","Africa","Africa","Africa","Africa","Europe","The Americas","The Americas","The Americas","Oceania","The Americas","Asia","The Americas","Europe","The Americas","Europe","Asia","Asia","Europe","Middle East","Middle East","Europe","Middle East","Europe","The Americas","Middle East","Asia","Asia","Africa","Asia","Asia","Oceania","Asia","Middle East","Asia","Middle East","Africa","Africa","The Americas","Europe","Asia","Africa","Europe","Europe","Europe","Asia","Africa","Europe","Africa","Asia","The Americas","Europe","Africa","Europe","Asia","Europe","Asia","Africa","Africa","Africa","Africa","Asia","Africa","Oceania","Africa","Africa","The Americas","Europe","Europe","Asia","Oceania","Middle East","Asia","The Americas","The Americas","Asia","Oceania","Europe","The Americas","Europe","The Americas","Oceania","Middle East","Europe","Europe","Africa","Middle East","Africa","Africa","Asia","Oceania","Africa","The Americas","Africa","Europe","Africa","Africa","The Americas","Europe","Europe","Europe","Africa","Africa","Middle East","Africa","Africa","Asia","Asia","Asia","Asia","Oceania","The Americas","Africa","Europe","Africa","Africa","Europe","The Americas","The Americas","Asia","The Americas","The Americas","The Americas","Asia","Oceania","Middle East","Oceania","Middle East","Africa","Africa","Africa","Africa")
#(c) Kirill Eremenko, www.superdatascience.com
mydf <- data.frame(
Countries_2012_Dataset,
Codes_2012_Dataset,
Regions_2012_Dataset
)
head(mydf)
head(mydf)
head(mydf)
head(mydf)
#changing names of columns OR variables
colnames(mydf) <- c("Country","Code","Region")
#changing names of columns OR variables
colnames(mydf) <- c("Country","Code","Region")
#changing names of columns OR variables
colnames(mydf) <- c("Country","Code","Region")
head(mydf)
rm(mydf)
mydf <- data.frame(
Country=Countries_2012_Dataset,
Code=Codes_2012_Dataset,
Region=Regions_2012_Dataset
)
mydf
head(mydf)
tail(mydf)
summary(mydf)
#-----------------------------Merging Data-Frames
head(stats)
head(mydf)
#-----------------------------Merging Data-Frames
head(stats)
head(mydf)
head(merged)
merged <- merge(stats, mydf, by.x="Country.Code", by.y="Code")
head(merged)
merged$Country <- NULL
head(merged)
str(merged)
tail(merged)
tail(merged)
tail(merged)
library("ggplot")
library("ggplot2")
qplot(data=merged, x=Internet.users, y=Birth.rate,
color=Region, size=I(4))
#1. Shapes
qplot(data=merged, x=Internet.users, y=Birth.rate,
color=Region, size=I(4), Shape=I(17))
qplot(data=merged, x=Internet.users, y=Birth.rate,
color=Region, size=I(4), Shape=I(17))
#1. Shapes
qplot(data=merged, x=Internet.users, y=Birth.rate,
color=Region, size=I(4), shape=I(17))
#1. Shapes
qplot(data=merged, x=Internet.users, y=Birth.rate,
color=Region, size=I(4), shape=I(23))
#1. Shapes
qplot(data=merged, x=Internet.users, y=Birth.rate,
color=Region, size=I(4), shape=I(21))
#1. Shapes
qplot(data=merged, x=Internet.users, y=Birth.rate,
color=Region, size=I(4), shape=I(20))
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
setwd("/home/alwaysyash/Documents/work/R")
getwd()
movies <- read.csv("P2-Movie-Ratings.csv")
head(movies)
movies <- read.csv("P2-Movie-Ratings.csv")
head(movies)
colnames(movies) <- c("Film", "Genre", "CriticRating", "AudienceRating", "BudgetMillions", "Year")
head(movies)
tail(movies)
str(movies)
summary(movies)
#Aesthetics
library(ggplot2)
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating)) +
geom_point()
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre)) +
geom_point()
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=BudgetMillions)) +
geom_point()
p <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
colour=Genre, size=BudgetMillions))
p
p + geom_point()
View(movies)
View(p)
p + geom_line()
#line
p + geom_line(size=1)
#multiple layers
p + geom_line() + geom_point()
#----------------------overriding asthetics
p + geom_line(ast())
head(movies)
q <- ggplot(data=movies, x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions)
ggplot(data=movies, x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions)
#add geom layer
q + geom_line()
#add geom layer
q + geom_point()
#add geom layer
q + geom_point()
q <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions))
#add geom layer
q + geom_point()
#overriding aes
q + geom_point(aes(size=CriticRating))
#ex2
q + geom_point(aes(color=BudgetMillions))
q + geom_point()
#ex3
q + geom_point(aes(x=BudgetMillions))
q + geom_point(aes(x=BudgetMillions)) +
xlab("BudgetMillions $$$")
#ex4
q + geom_line() + geom_point()
#reduce line size
q + geom_line(size=1) + geom_point()
q + geom_point(aes(x=BudgetMillions)) +
xlab("BudgetMillions $$$")
#----------------------Mapping vs Setting
r <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
r + geom_point()
#Add Color
#1. Mapping (what we have done so far)
r + geom_point(aes(color=Genre))
#Add Color
#1. Mapping (what we have done so far)
r + geom_point(aes(color=Genre))
#2. Setting:
r + geom_point(color="DarkGreen")
#1. Mapping
r + geom_point(aes(size=BudgetMillions))
#2. Setting
r + geom_point(size=10)
#ERROR
r + geom_point(aes(size=10))
#ERROR:
r + geom_point(aes(size=10))
#-------------------------Histograms and Density Charts
s <- ggplot(data = movies, aes(x=BudgetMillions))
s + geom_histogram(binwidth = 10)
s + geom_histogram(binwidth = 50)
s <- ggplot(data = movies, aes(x=BudgetMillions))
s + geom_histogram(binwidth = 10)
#fill color
s + geom_histogram(binwidth = 10, fill="Green")
#Mapping the color
#color() is reserved for outline here,
s + geom_histogram(binwidth = 10, aes(fill=Genre))
#add a border
#we have to set color for border, not mapping it,
#so we use it outside aes
s + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
#some times we need density charts:
s + geom_density()
#some times we need density charts:
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position="stack")
#----------------------------Starting Layer Tips
t <- ggplot(data=movies, aes(x=AudienceRating))
t + geom_histogram(binwidth = 10)
t + geom_histogram(binwidth = 10, fill="White")
t + geom_histogram(binwidth = 10, fill="White",
color="Blue")
#Another way to achieve the same:
t <- ggplot(data=movies)
#Another way to achieve the same:
t <- ggplot(data=movies)
#Another way to achieve the same:
t <- ggplot(data=movies)
t <- ggplot(data=movies)
t + geom_histogram(binwidth = 10, aes(x=AudienceRating)
fill="White",color="Blue")
t <- ggplot(data=movies)
t + geom_histogram(binwidth = 10, aes(x=AudienceRating),
fill="White",color="Blue")
t + geom_histogram(binwidth = 10,
aes(x=CriticRating),
fill="White",color="Blue")
t <- ggplot(data=movies)
t + geom_histogram(binwidth = 10,
aes(x=AudienceRating),
fill="White",color="Blue")
#>>> 5
t <- ggplot()
#>>> 5
t <- ggplot()
#--------------------------Statistical Transformations
?geom_smooth
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
color=Genre))
u + geom_point() + geom_smooth()
u + geom_point() + geom_smooth(fill=NA)
u <- ggplot(data=movies, aes(x=Genre, y=AudienceRating,
color=Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2) + geom_point()
#tip / Hack:
u + geom_boxplot(size=1.2) + geom_jitter()
#another way
u+ geom_jitter() + geom_boxplot(size=1.2)
#another way
u+ geom_jitter() + geom_boxplot(size=1.2,
alpha=0.5)
#------------------------Using Facets
v <- ggplot(data=movies, aes(x=BudgetMillions,))
#------------------------Using Facets
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10, aes(fill=Genre))
v + geom_histogram(binwidth = 10, aes(fill=Genre,
color="Black"))
v + geom_histogram(binwidth = 10, aes(fill=Genre),
color="Black")
gacet_grid(Genre~.)
v + geom_histogram(binwidth = 10, aes(fill=Genre),
color="Black")
v + geom_histogram(binwidth = 10, aes(fill=Genre),
color="Black") +
v + geom_histogram(binwidth = 10, aes(fill=Genre),
color="Black") +
gacet_grid(Genre~.)
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10, aes(fill=Genre),
color="Black") +
gacet_grid(Genre~.)
v <- ggplot(data=movies, aes(x=BudgetMillions))
#facets
v + geom_histogram(binwidth = 10, aes(fill=Genre),
color="Black") +
gacet_grid(Genere~.)
v <- ggplot(data=movies, aes(x=BudgetMillions))
#facets
v + geom_histogram(binwidth = 10, aes(fill=Genre),
color="Black") +
gacet_grid(Genre~.)
v + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~., scales="free")
v <- ggplot(data=movies, aes(x=BudgetMillions))
#facets
v + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~., scales="free")
#scatterplots
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
color=Genre))
w + geom_point(size=3)
#scatterplots
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
color=Genre))
w + geom_point(size=3)
#facets
w + geom_point(size=3) +
facet_grid(Genre~.)
w + geom_point(size=3) +
facet_grid(~.Year)
w + geom_point(size=3) +
facet_grid(.~Year)
w + geom_point(size=3) +
facet_grid(Genre~Year)
w + geom_point(size=3) +
geom_smooth() +
facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) +
geom_smooth() +
facet_grid(Genre~Year)
o <- ggplot(data = movies, aes(x=BudgetMillions))
o + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
h
#axes labels
h + xlab("Money Axis")
#axes labels
h + xlab("Money Axis")
o + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
#axes labels
h + xlab("Money Axis")
h <- o + geom_histogram(binwidth = 10, aes(fill=Genre), color="Black")
#axes labels
h + xlab("Money Axis")
#axes labels
h + xlab("Money Axis") +
ylab("Number of Movies")
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x=element_text(colour="DarkGreen", size=30),
axis.title.y=element_text(colour="Red", size=30))
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x=element_text(colour="DarkGreen", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20))
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x=element_text(colour="DarkGreen", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20))
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x=element_text(colour="DarkGreen", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1))
h + xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x=element_text(colour="DarkGreen", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1))
h + xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x=element_text(colour="DarkGreen", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1))
h + xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x=element_text(colour="DarkGreen", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20),
legend.title=element_text(size=30),
legend.text=element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title=element_text(colour="DarkBlue",
size=40,
family="Courier"))
w + geom_point(aes(size=BudgetMillions)) +
geom_smooth() +
facet_grid(Genre~Year)
